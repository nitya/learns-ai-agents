{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Setting The Stage","text":""},{"location":"#1-why-learn-agentic-ai","title":"1. Why learn Agentic AI?","text":"<p>In Oct 2024, Gartner identified Agentic AI - or AI with Agency - as a trend to watch, predicting that 33% of enterprise software apps will include agentic AI by 2028, driving automation and workplace productivity. </p> <ul> <li>The target characteristics are an ability to learn from its environment, create complex plans, and perform tasks autonomously.</li> <li>The opportunities are in AI-enabled machine customers - ex: optimized decisions for automated transactions (goods and services exchange) based on preset rules.</li> <li>The challenges are in managing the risks of agentic AI - such as governance, trustworthiness (in decision-making), data quality, and smarter malware.</li> </ul> <p>There are a growing number of tools and frameworks tackling the challenges and opportunities in this space. Here are the top 5 agent frameworks cited in the \"Articles\" below, with a link to a relevant Quickstart for each.</p> <ol> <li>Microsoft AutoGen - AgentChat</li> <li>LangGraph - Quickstart</li> <li>CrewAI - Quickstart</li> <li>Semantic Kernel - Quickstart</li> <li>LangChain - Build an Agent</li> </ol> ARTICLES: READ ABOUT TRENDS IN AGENTIC AI FOR 2025 <ul> <li>Top 5 Frameworks for Building AI Agents in 2025 </li> <li>Top 3 Trending Agentic AI Frameworks</li> <li>Gartner Top 10 Strategic Technology Trends for 2025</li> <li>McKinsey: Why agents are the next frontier of generative AI</li> <li>The Next \u201cNext Big Thing\u201d: Agentic AI\u2019s Opportunities and Risks - UC Berkeley</li> </ul> <p>Two of these options - Semantic Kernel and AutoGen - are open-source projects from Microsoft. While these are frameworks for development, building enterprise applications requires services that can help us manage and secure these solutions in production. This is where the Azure AI Agent Service come in, helping us streamline the end-to-end development workflow for agentic AI applications in the Azure AI Foundry platform. Let's set the stage with some definitions.</p>"},{"location":"#2-what-is-an-ai-agent","title":"2. What is an AI Agent?","text":"<p>In Azure AI Foundry an AI Agent is a smart microservice that can be used to answer questions (RAG), perform actions (Tasks) or automate workflows (E2E). It does this by combining the power of generative AI models with tools that enable access and interaction with real-world data sources.</p> <p>In AutoGen an Agent is an entity that helps us define what actions are taken when a message is received while a Team defines rules for how agents interact with each other. The AssistantAgent preset is an agent that has access to a model (LLM) and tools (functions) that it can use to address the specified task.</p> <p>In Semantic Kernel Agent Framework an AI agent is a software entity designed to perform tasks autonomously or semi-autonomously by recieving input, processing information, and taking actions to achieve specific goals. Agents can send and receive messages, generating responses using a combination of models, tools, human inputs, or other customizable components. Agents are designed to work collaboratively, enabling complex workflows by interacting with each other. </p>"},{"location":"#3-the-azure-ai-agent-service","title":"3. The Azure AI Agent Service","text":"<p>By definition, it is a fully-managed service designed to empower developers to securely build, deploy, and scale high-quality, and extensible AI agents. Leveraging an extensive ecosystem of models, tools and capabilities from OpenAI, Microsoft, and third-party providers, Azure AI Agent Service enables building agents for a wide range of generative AI use cases. Client-side function calling which was previously complex to implement - is now just a few lines of code.</p> <p>It has the following features:</p> <ul> <li>Enterprise-grade security</li> <li>Rapid development &amp; automation</li> <li>Extensive data connections</li> <li>Flexible Model Selection</li> <li>Uses same wire protocol as Azure OpenAI Assistants</li> </ul> <p>Quickstart: Create a new agent</p> <ul> <li>Azure SDK (Python)</li> <li>OpenAI SDK (Python)</li> </ul>"},{"location":"#4the-autogen-framework","title":"4.The AutoGen Framework","text":"<p>By definition, AutoGen is an open-source framework for building AI agent systems. It simplifies the creation of event-driven, distributed, scalable, and resilient agentic applications. It allows you to quickly build systems where AI agents collaborate and perform tasks autonomously or with human oversight.</p> <p>In Oct 2024, the team released AutoGen 0.4 a from-the-ground-up rewrite in response to developer and community feedback. This version embraces the actor model of computing to support distributed, highly scalable, event-driven agentic systems - with features like composability, flexibility, debugging &amp; observability, and scalability. The project also moved away from a single monolithic library, to a multi-library solution with three packages:</p> <ul> <li>Core - the building blocks for agentic AI</li> <li>AgentChat - a task-driven high-level API with group chat, code exection, prebuilt agents</li> <li>Extensions - core interfaces and third-party integrations for expansion.</li> </ul> <p>Quickstart: Create a new agentic app</p> <ul> <li>AgentChat - build apps with preset agents.</li> <li>Core - understand basic building blocks</li> </ul>"},{"location":"#5-the-semantic-kernel-project","title":"5. The Semantic Kernel Project","text":"<p>Semantic Kernel is a lightweight, open-source development kit that lets you easily build AI agents and integrate the latest AI models into your C#, Python, or Java codebase. It serves as an efficient middleware that enables rapid delivery of enterprise-grade solutions.</p> <p>Quickstart: Create a new agentic app - With Python - with C# - with Java</p>"},{"location":"#51-the-agent-framework","title":"5.1 The Agent Framework","text":"<p>An AI agent is a software entity designed to perform tasks autonomously or semi-autonomously by recieving input, processing information, and taking actions to achieve specific goals. Agents can send and receive messages, generating responses using a combination of models, tools, human inputs, or other customizable components.</p> <p>The Semantic Kernel Agent Framework provides a platform within the Semantic Kernel eco-system that allow for the creation of AI agents and the ability to incorporate agentic patterns into any application based on the same patterns and features that exist in the core Semantic Kernel framework.</p>"},{"location":"#52-the-process-framework","title":"5.2 The Process Framework","text":"<p>A Process is a structured sequence of activities or tasks that deliver a service or product, adding value in alignment with specific business goals for customers.</p> <p>The Semantic Kernel Process Framework is a cutting-edge approach designed to optimize AI integration with your business processes. This framework empowers developers to efficiently create, manage, and deploy business processes while leveraging the powerful capabilities of AI, alongside your existing code and systems.</p> <p>This is a #NityaLearnsAI project - learn about me, then explore resources to learn AI!</p>"},{"location":"1-Azure-AI-Agent-Service/1-Quickstart/01/","title":"1.1 Before You Begin","text":"<p>This is a crash-course on the Azure AI Agent Service with hands-on lab exercises. </p>"},{"location":"1-Azure-AI-Agent-Service/1-Quickstart/01/#1-learning-objectives","title":"1. Learning Objectives","text":"<p>By the end of this crash course, I should be able to:</p> <ol> <li>Describe what the Azure AI Agent Service does</li> <li>Setup an Azure AI project to use Agent Service</li> <li>Create, configure, and run, my first AI Agent</li> <li>Implement responsible AI principles for agents</li> </ol>"},{"location":"1-Azure-AI-Agent-Service/1-Quickstart/01/#2-lab-prerequisites","title":"2. Lab Prerequisites","text":"<p>I checked off these pre-requisites before I got started: </p> <ul> <li> An active Azure subscription - with registered resource providers</li> <li> A personal GitHub account - run codespaces on this repo.</li> <li> Azure CLI installed locally - configured in dev container.</li> <li> Familiarity with Python and Visual Studio Code </li> </ul>"},{"location":"1-Azure-AI-Agent-Service/1-Quickstart/01/#3-learning-environment","title":"3. Learning Environment","text":"<p>Thsi repository is set up with a dev container that contains all the necessary tools and library dependencies required for doing the hands-on exercises - including extensions for the Visual Studio Code IDE (my preferred development environment).</p> <p>To get started with this pick one of these options:</p> <ol> <li> <p>Launch the repository using GitHub Codespaces. This sets up a development container in the cloud with a Visual Studio Code editor in the browser.</p> </li> <li> <p>Clone the repository to your local device and launch using Docker Desktop. This sets up a development container and uses the Visual Studio Code editor in your local environment.</p> </li> </ol> <p>The first option is simpler, but requires available GitHub Codespaces quota and a network connection. You can switch between options anytime - just save code changes to the repo.</p>"},{"location":"1-Azure-AI-Agent-Service/1-Quickstart/01/#4-learning-resources","title":"4. Learning Resources","text":"<ol> <li>Azure AI Agent Service Documentation</li> <li>Azure AI Foundry Documentation</li> <li>Azure CLI Documentation</li> <li>Azure resource providers and types</li> <li>Azure Cognitive Services -  code-first modules for Python<ul> <li>Azure AI Projects v1.0.0b3 - <code>azure.ai.projects</code> </li> <li>Azure AI Resources v1.0.0b8 - <code>azure.ai.resources</code></li> <li>Azure AI Model Inference v1.0.0b8 - <code>azureai.ai.inference</code></li> <li>Azure AI Evaluation v1.0.0b5 - <code>azureai.ai.evaluation</code></li> <li>Azure AI Content Safety v1.0.0b1 - <code>azureai.ai.contentsafety</code></li> <li>Azure AI Generative v1.0.0b8 - <code>azureai.ai.generative</code></li> </ul> </li> <li>Azure AI Samples - for diverse scenarios</li> </ol>"},{"location":"1-Azure-AI-Agent-Service/1-Quickstart/02/","title":"1.2 Some Fundamentals","text":"<p>Here are 8 things you need to know about Azure AI Agent service before diving in.</p>"},{"location":"1-Azure-AI-Agent-Service/1-Quickstart/02/#11-definitions","title":"1.1 Definitions","text":"<p>The Azure AI Agent Service is a fully managed service designed to empower developers to securely build, deploy, and scale high-quality, and extensible AI agents without needing to manage the underlying compute and storage resources. </p> <p>An AI Agent acts as a \"smart\" microservice that can be used to answer questions (RAG), perform actions, or completely automate workflows - by combining the power of generative AI models with tools that allow it to access and interact with real-world data sources.</p>"},{"location":"1-Azure-AI-Agent-Service/1-Quickstart/02/#12-agent-creation","title":"1.2 Agent Creation","text":"<p>The Azure AI Agent service uses the same wire protocol as Azure OpenAI Assistants allowing you to use either OpenAI SDKs or Azure AI Foundry SDK for building agents. </p>"},{"location":"1-Azure-AI-Agent-Service/1-Quickstart/02/#121-create-agent","title":"1.2.1 Create Agent","text":"<p>To create an agent, you need to specify:</p> <ul> <li>the model - it uses to execute tasks</li> <li>the instructions - on how it should complete tasks</li> <li>the tools - it can acccess for support tasks</li> <li>the resources - it can use to support tools</li> </ul> <p>Here is a simple agent constructor:</p> 1 | Create An Agent<pre><code># Create am agent with a model, instructions &amp; tools\nagent = project_client.agents.create_agent(\n    model=\"gpt-4o-mini\",\n    name=\"my-agent\",\n    instructions=\"You are helpful agent\",\n    tools=code_interpreter.definitions,\n    tool_resources=code_interpreter.resources,\n)\n</code></pre>"},{"location":"1-Azure-AI-Agent-Service/1-Quickstart/02/#122-create-activity-thread","title":"1.2.2 Create Activity Thread","text":"<p>To \"run\" an agent, we need an execution thread that is initialized with a message for that agent, typically consisting of a user request. Here's an example of what that looks like:</p> 1 | Create Activity Thread<pre><code># Create a thread with messages\nthread = project_client.agents.create_thread()\nmessage = project_client.agents.create_message(\n    thread_id=thread.id,\n    role=\"user\",\n    content=\"Could you please create a bar chart for the operating profit using the following data and provide the file to me? Company A: $1.2 million, Company B: $2.5 million, Company C: $3.0 million, Company D: $1.8 million\",\n)\n</code></pre>"},{"location":"1-Azure-AI-Agent-Service/1-Quickstart/02/#123-run-agent-in-thread","title":"1.2.3 Run Agent in Thread","text":"<p>To execute an agent, simply start a run with the created thread and agent as shown below. This runs the model (with instructions), invokes tools (as agent calls them) and returns final response (for user dispay). The messages now represent the conversation between user and one or more agents, in the completion of the given task.</p> 1 | Run Agent In Thread<pre><code># Ask the agent to perform work on the thread\nrun = project_client.agents.create_and_process_run(thread_id=thread.id, agent_id=agent.id)\n\n# Fetch and log all messages to see the agent's response\nmessages = project_client.agents.list_messages(thread_id=thread.id)\nprint(f\"Messages: {messages}\")\n</code></pre>"},{"location":"1-Azure-AI-Agent-Service/1-Quickstart/02/#13-agent-coordination","title":"1.3 Agent Coordination","text":"<p>To build more complex workflows, you can have agents sending instructions to other agents (effectively representing the user in the context of delegating that task) and using frameworks like Semantic Kernel or AutoGen to orchestrate workflows and coordinate conversations in effective ways, to deliver the end response.</p> <p>Because Azure AI Agent Service works seamlessly with these frameworks and is a managed service, you can get all the benefits of security, scale, and safety, without added effort.</p>"},{"location":"1-Azure-AI-Agent-Service/1-Quickstart/02/#14-agent-ai-service-benefits","title":"1.4 Agent AI Service Benefits","text":"<p>Why use Azure AI Agent Service for orchestration instead of manually doing coordination using the Inference API for each model?</p> <ol> <li>Automatic tool calling - now handled for you server-side, reducing client complexity</li> <li>Secure data management - threads store conversation state for you</li> <li>Rich tool ecosystem - includes file retrieval, code interpreter, Bing, Azure AI Search, Azure Functions</li> </ol> <p>Why use Azure AI Agent Service for development instead of Azure OpenAI assistants?</p> <ol> <li>Flexible model selection - pick models beyond Azure OpenAI e.g., Cohere, Llama 3</li> <li>Extensive data connectors - integrate Bing, SharePoint, Fabric, AI Search, other API</li> <li>Enterprise grade security - data privacy, compliance, keyless auth, secure data etc.</li> <li>Flexible storage options - bring your own blog storage or use managed storage options</li> </ol> <p>Plus, Azure AI Agent Service follows Responsible AI guidelines:</p> <ol> <li>Responsible AI principles - for trustworthy AI</li> <li>Content filters - for safety</li> <li>Information &amp; guidance - for customers</li> </ol>"},{"location":"1-Azure-AI-Agent-Service/1-Quickstart/02/#15-agent-ai-service-limitations","title":"1.5 Agent AI Service: Limitations","text":"<ol> <li>Agent implementations have to work within the quota availability of underlying models</li> <li>Agent AI Service has other limits for usage:<ul> <li>max files per agent/thread = 10K (API or Azure AI Foundry) or 20 (AOAI Studio)</li> <li>max file size for agents = 512MB</li> <li>max size for uploaded files = 100GB</li> <li>agents token limit = 2M tokens</li> </ul> </li> <li>Agent AI Service supports additional models. Just deploy them in the same project before using in agents. Models  currently limited to<ul> <li>Llama 3.1-70B-instruct</li> <li>Mistral-large-2407</li> <li>Cohere command R+</li> </ul> </li> </ol>"},{"location":"1-Azure-AI-Agent-Service/1-Quickstart/02/#16-agent-ai-service-costs","title":"1.6 Agent AI Service: Costs","text":"<ol> <li>Understand Azure OpenAI deployment types to determine the differences in billing and performance for usage at scale.</li> <li>Understand Azure AI Foundry pricing with respect to other AI services and tooling.</li> </ol> <p>The FAQ breaks down other elements of cost including inference costs, tool usage costs, and storage costs.</p>"},{"location":"1-Azure-AI-Agent-Service/1-Quickstart/02/#17-about-observability","title":"1.7 About: Observability","text":"<p>Multi-agent workflows can be harder to debug since control flows through different threads and with different levels of parallelism and nesting.</p> <p>Tracing support gives you built-in observability using OpenTelemetry standards for data. Trace data can then be exported to relevant OpenTelemetryProtocol (OLTP) compatible dashboards - including by:</p> <ul> <li>using console tracing (locally)</li> <li>using Azure monitor (in Azure AI Foundry portal)</li> </ul>"},{"location":"1-Azure-AI-Agent-Service/1-Quickstart/02/#18-about-available-tools","title":"1.8 About: Available Tools","text":"<p>When you create AI agents, you can specify different tools in order to help ground the model they use, or extend their capabilities. These are categorized as:</p> <ol> <li>Knowledge Tools - give the agent access to data sources for grounding responses. Think of use cases for agentic RAG.</li> <li>Action Tools - enhance the agent's capabilities by allowing it to run various tools at runtime. Think of search, code interpreter etc.</li> </ol>"},{"location":"1-Azure-AI-Agent-Service/1-Quickstart/03/","title":"1.3 AI Project Setup","text":""},{"location":"1-Azure-AI-Agent-Service/1-Quickstart/04/","title":"1.4 Basic vs. Standard","text":""},{"location":"1-Azure-AI-Agent-Service/1-Quickstart/05/","title":"1.5 Resource Architecture","text":""},{"location":"1-Azure-AI-Agent-Service/1-Quickstart/06/","title":"1.6 Create &amp; Run Agent","text":""},{"location":"1-Azure-AI-Agent-Service/1-Quickstart/07/","title":"1.7 Summary &amp; Next Steps","text":""},{"location":"About-Me/","title":"About Me","text":"<p>Welcome to my world! My name is Nitya Narasimhan and I am a PhD, a Polyglot, and a Parent. I've worked in tech for nearly three decades in roles spanning research, engineering, and advocacy. I've also been a community leader in the Greater New York region for over a decade, organizing meetups and conferences that have skilled thousands of developers. As a parent and educator, I'm becoming increasingly invested in helping people learn AI in a way that makes complex topics feel more relatable to their lives, and in providing them with hands-on learning resources that help translate awareness into action.</p> <p>My day job as an AI advocate at Microsoft is focused on the Azure AI platform. But my personal interests span a variety of topics from open-source tooling to visual storytelling and creative content projects that put the fun in fundamentals. </p> <p>Nitya Learns AI is my 2025 initiative to help me bridge those personas. It builds on my learnings from my #30DaysOf initiative, but with a focus on personal growth and experimentation. How can you track my progress? Look for these resources in 2025:</p> <ul> <li>My LinkedIn newsletter with this name (coming in 2025)</li> <li>The nitya-learns-ai topic on GitHub, tagging relevant projects</li> <li>The #NityaLearnsAI tag on videos and illustrated guides - website TBA</li> </ul> <p>Learn with me - make a resolution to add AI to your engineering toolkit in 2025!</p> <p></p> <p>This is an AI-generated image from Microsoft Bing Image Creator.</p>"},{"location":"Resources/","title":"Resources","text":"<p>Markmaps are a great way to get the big picture of the documentation set for any technology. Check out the markmaps for the Azure AI Agent Service, Semantic Kernel and AutoGen below. Click on any node (circle) to collapse or expand the sub-tree for clarity. </p> <p>The \u2705 indicates the content is covered in the relevant crash course. The markmaps are not complete so check back regularly for updates.</p>"},{"location":"Resources/#1-azure-ai-agents-documentation","title":"1. Azure AI Agents Documentation","text":"# [Azure AI Agent Service](https://learn.microsoft.com/en-us/azure/ai-services/agents/)  ## Overview  ### [What is Azure AI Agent Service \u2728 ](https://learn.microsoft.com/en-us/azure/ai-services/agents/overview) - \u2705  ### [Quotas and Limits \u2728](https://learn.microsoft.com/en-us/azure/ai-services/agents/quotas-limits) - \u2705  ### [Model and Region Support \u2728 ](https://learn.microsoft.com/en-us/azure/ai-services/agents/concepts/model-region-support) - \u2705  ### [Pricing](https://azure.microsoft.com/pricing/details/ai-studio/) - \u2705  ### [What's New \u2728 ](https://learn.microsoft.com/en-us/azure/ai-services/agents/whats-new) - \u2705  ### [FAQ](https://learn.microsoft.com/en-us/azure/ai-services/agents/faq) - \u2705  ## [Quickstart \u2728 ](https://learn.microsoft.com/en-us/azure/ai-services/agents/quickstart) - \u2705  ## Concepts  ### [Agents](https://learn.microsoft.com/en-us/azure/ai-services/agents/concepts/agents)  ### [Tracing with Application Insights](https://learn.microsoft.com/en-us/azure/ai-services/agents/concepts/tracing)  ## How-To ### [Tools](https://learn.microsoft.com/en-us/azure/ai-services/agents/how-to/tools/overview) #### [Overview](https://learn.microsoft.com/en-us/azure/ai-services/agents/how-to/tools/overview) #### Knowledge Tools ##### [Grounding With Bing Search](https://learn.microsoft.com/en-us/azure/ai-services/agents/how-to/tools/bing-grounding) ##### [File Search](https://learn.microsoft.com/en-us/azure/ai-services/agents/how-to/tools/file-search) ##### [Azure AI Search](https://learn.microsoft.com/en-us/azure/ai-services/agents/how-to/tools/azure-ai-search) #### Action Tools ##### [Function calling](https://learn.microsoft.com/en-us/azure/ai-services/agents/how-to/tools/function-calling) ##### [Code interpreter](https://learn.microsoft.com/en-us/azure/ai-services/agents/how-to/tools/code-interpreter) ##### [Use OpenAI defined tools](https://learn.microsoft.com/en-us/azure/ai-services/agents/how-to/tools/openapi-spec) ##### [Azure Functions](https://learn.microsoft.com/en-us/azure/ai-services/agents/how-to/tools/azure-functions) ### [Content Filtering](https://learn.microsoft.com/en-us/azure/ai-services/openai/how-to/content-filters?context=/azure/ai-services/agents/context/context) ### [Use Your Own Resources](https://learn.microsoft.com/en-us/azure/ai-services/agents/how-to/use-your-own-resources)  ## Responsible AI ### [Data, privacy and security](https://learn.microsoft.com/en-us/legal/cognitive-services/agents/data-privacy-security?context=/azure/ai-services/agents/context/context)  ## Reference ### Frameworks #### [AutoGen](https://microsoft.github.io/autogen/0.4.0.dev11/) #### [Semantic Kernel](https://learn.microsoft.com/en-us/semantic-kernel/overview/) ### SDK ### Azure SDK ##### [Python](https://learn.microsoft.com/en-us/python/api/overview/azure/ai-projects-readme?context=/azure/ai-services/agents/context/context) ##### [C#](https://learn.microsoft.com/en-us/dotnet/api/overview/azure/ai.projects-readme?context=/azure/ai-services/agents/context/context) ### OpenAI SDK ##### [Python](https://github.com/openai/openai-python/blob/main/README.md) ##### [C#](https://github.com/openai/openai-dotnet/blob/main/README.md)  ## Resources ### [Support and help options](https://learn.microsoft.com/en-us/azure/ai-services/cognitive-services-support-options?context=/azure/ai-services/agents/context/context) ### [Region Support](https://azure.microsoft.com/global-infrastructure/services/?products=cognitive-services) ### [Terms of use](https://www.microsoft.com/licensing/terms/productoffering/MicrosoftAzure/MCA#ServiceSpecificTerms) ### [Azure compliance offerings](https://azure.microsoft.com/resources/microsoft-azure-compliance-offerings/)"},{"location":"Resources/#2-semantic-kernel-documentation","title":"2. Semantic Kernel Documentation","text":"# Semantic Kernel  ## [Overview](https://learn.microsoft.com/en-us/semantic-kernel/overview/)  ## Getting Started ### [Quickstart](https://learn.microsoft.com/en-us/semantic-kernel/get-started/quick-start-guide?pivots=programming-language-csharp) ### [In Depth Samples](https://learn.microsoft.com/en-us/semantic-kernel/get-started/detailed-samples) ### [Supported Languages](https://learn.microsoft.com/en-us/semantic-kernel/get-started/supported-languages)  ## Concepts ### [Kernel](https://learn.microsoft.com/en-us/semantic-kernel/concepts/kernel) ### [Semantic Kernel Components](https://learn.microsoft.com/en-us/semantic-kernel/concepts/semantic-kernel-components?pivots=programming-language-csharp) ### [Planning](https://learn.microsoft.com/en-us/semantic-kernel/concepts/planning)  ## Frameworks  ### [Agent Framework](https://learn.microsoft.com/en-us/semantic-kernel/frameworks/agent/) ### [Process Framework](https://learn.microsoft.com/en-us/semantic-kernel/frameworks/process/process-framework)"},{"location":"Resources/#3-autogen-documentation","title":"3. AutoGen Documentation","text":"# AutoGen 0.4 ## [User Guide](https://microsoft.github.io/autogen/0.4.0.dev11/user-guide/index.html)  ## [Packages](https://microsoft.github.io/autogen/0.4.0.dev11/packages/index.html) ## [API Reference](https://microsoft.github.io/autogen/0.4.0.dev11/reference/index.html) ## [Magentic One](https://github.com/microsoft/autogen/tree/main/python/packages/autogen-magentic-one)"}]}